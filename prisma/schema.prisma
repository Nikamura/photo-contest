generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Contest {
  id   String @id @default(uuid())
  name String
}

model FileUpload {
  id                 String   @id @default(uuid())
  fileName           String
  metadata           Json?
  exif               Json?
  iptc               Json?
  xmp                Json?
  icc                Json?
  bucketKey          String?
  thumbnailBucketKey String?
  bucketName         String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  owner              User?    @relation(fields: [ownerId], references: [id])
  ownerId            String?
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(uuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  fileUploads   FileUpload[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
